package SelectionSort;

public class SelectionSort {
	/*
	 * swap문
	 * array배열의 i번쨰와 j번째의 값을 바꿔준다.
	 */
	public static void swap(int[] array, int i, int j)	{
		int temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}
	
	/*
	 * sort문
	 * array배열의 마지막 전 index까지 값을 비교해야 하므로 반복문을 (array배열의 길이 - 1)번 실행.
	 * 가장 작은 작은 값의 index를 찾기 위해 기준을 임의로 min_index = 1로 정해준다.
	 * 현재 index인 i번째의 다음번쨰를 비교대상으로 하기 때문에 j = i+1로 설정하고, 배열의 끝까지 수행하기 때문에 (array배열의 길이)번 반복문 수행해준다.
	 * min_index번째의 값이 j번째의 값보다 크다면, min_index에 j를 대입하여 가장 작은 값이라고 설정한 min_index의 index값을 변경해준다.
	 * 배열의 끝까지 수행하였다면 마지막으로 대입된 min_index와 i번째의 값을 바꿔준다.
	 */
	public static void sort(int[] array)	{
		for(int i = 0; i < array.length-1; i++)	{
			int min_index = i;
			for(int j = i+1; j < array.length; j++)	{
				if(array[min_index] > array[j])	{
					min_index = j;
				}			
			}	
			swap(array, min_index, i);
		}
	}
	
	/*
	 * printArray문
	 * array배열을 출력해준다
	 */
	public static void printArray(int[] array)	{
		for(int i = 0; i < array.length; i++)	{
			System.out.print(array[i] + " ");
		}
	}
	
	/*
	 * 실행문
	 */
	public static void main(String[] args)	{
		int[] array = {7, 3, 2, 8, 9, 4, 6, 1, 5};
		sort(array);
		printArray(array);
	}
}
